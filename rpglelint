#!/usr/bin/env perl

use strict;
use warnings;
use v5.16;

use Getopt::Long qw{ GetOptionsFromArray :config no_ignore_case gnu_compat bundling };

use RPG::Parser;
use RPG::Linter;

my $parser = RPG::Parser->new;
my $linter = RPG::Linter->new;

my $dump = 0;

sub parseopts
{
  my ($opts) = @_;

  GetOptionsFromArray($opts,
    'f|format=s' => sub {
      my ($name, $value) = @_;
      $linter->setformat($value);
    },
    '--dump' => \$dump,
    'I|include=s' => sub {
      my ($name, $value) = @_;
      push(@{$parser->{include}}, glob($value));
    },
    'W=s' => sub {
      my ($name, $option) = @_;
      $linter->setoption($option);
    },
    'h|help' => sub {
      print("Usage rpglelint [OPTIONS]... [FILES]...\n");
      print("\n");
      printf("The following warnings are supported:\n");
      printf("  -W%s,\n", $_) for sort keys %{$linter->{rules}};
      printf("\n");
      printf("  -Wall   enables all warnings\n");
      printf("\n");
      printf("  -I, --include   a file glob that will be used to resolve include directories\n");
      printf("  -f, --format    either 'unix' or 'json'\n");
      printf("  -h, --help      show this help and exit\n");
      exit 0;
    }
  ) or exit 2;
}

if (defined $ENV{RPGLELINT_INCLUDE}) {
  push(@{$parser->{include}}, glob($_)) for split(/:/, $ENV{RPGLELINT_INCLUDE});
}

parseopts(\@ARGV);
$parser->{parseopts} = \&parseopts;

@ARGV = ('-') if @ARGV < 1;

for my $file (@ARGV) {
  my $scope = $parser->parse($file);
  if ($dump) {
    print Dumper($scope);
  } else {
    $linter->lint($scope);
  }
}
